name: Deploy Flask App

on:
  push:
    branches:
      - master # Or your primary branch, e.g., main

jobs:
  deploy:
    name: Deploy to Production Server
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup SSH key for server connection
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.DEPLOY_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

      - name: Deploy application files via rsync
        run: |
          echo "ðŸš€ Starting to sync files to the server..."
          rsync -avz --delete \
            --exclude='.git/' \
            --exclude='.github/' \
            --exclude='myenv/' \
            ./ ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }}:~/flask-app/
          echo "âœ… File sync complete."

      - name: Install dependencies and restart server
        run: |
          # This step requires that the SERVER_USER on the remote machine has
          # passwordless sudo permission for the 'systemctl restart' command.
          # You must configure this on your server by using 'sudo visudo' and adding:
          # ${{ secrets.SERVER_USER }} ALL=(ALL) NOPASSWD: /usr/bin/systemctl restart flaskapp, /usr/bin/systemctl status flaskapp
          ssh -T ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
          set -ex

          echo "::group::Server-side operations"
          cd ~/flask-app

          echo "--- Setting up Python virtual environment ---"
          python3 -m venv venv
          source venv/bin/activate

          echo "--- Installing dependencies from requirements.txt ---"
          pip install -r requirements.txt

          echo "--- Restarting application service with systemd ---"
          sudo /usr/bin/systemctl restart flaskapp

          echo "--- Checking application status ---"
          # Add a small delay to allow the service to start
          sleep 5
          sudo /usr/bin/systemctl status flaskapp --no-pager
          echo "::endgroup::"

          echo "ðŸŽ‰ Deployment to server successful!"
          EOF
